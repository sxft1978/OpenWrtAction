#
# Copyright (c) 2022-2024 SMALLPROGRAM <https://github.com/smallprogram/OpenWrtAction>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# Description: Build OpenWrt using GitHub Actions
#

name: ImmortalWrt-openwrt_x86

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      is_display_detailed:
        description: 'Whether to display detailed information about compilation'
        required: false
        default: 'false'
      is_single_threaded:
        description: 'Whether single-threaded compilation'
        required: false
        default: 'false'
  # schedule:
  #   - cron: 0 */8 * * *

env:
  MAKE_DEFCONFIG_SH: compile_script/step01_make_defconfig.sh
  GENERATE_RELEASE_TAG_SH: compile_script/step02_generate_release_tag.sh
  GENERATE_GIT_LOG_SH: compile_script/step03_generate_git_log.sh
  UPDATE_GIT_LOG_SH:  compile_script/step06_update_git_log.sh
  ORGANIZE_TAG_SH: compile_script/step07_organize_tag.sh
  FEEDS_CONF: 
  DIY_P1_SH: diy_script/immortalwrt_diy/diy-part1.sh 
  DIY_P2_SH: diy_script/immortalwrt_diy/diy-part1.sh

  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_ARTIFACT: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
 job_build:
    runs-on: ubuntu-22.04
    name: build
    steps:
      - name: Initialization Environment
        run: |
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          df -hT

      - name: Maximize Build Space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 6144
          swap-size-mb: 10240
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          build-mount-path: '/workdir'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update    
          sudo -E apt-get -qq install $(curl -fsSL https://github.com/smallprogram/OpenWrtAction/raw/main/diy_script/immortalwrt_dependence)
          # sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
          # sudo -E apt-get -qq autoremove --purge
          # sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          df -hT


      - name: Clone Source Code
        working-directory: /workdir
        run: |
          git clone https://github.com/immortalwrt/immortalwrt.git openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: Load Custom Feeds
        run: |
             [ -e $FEEDS_CONF ] && cp -r feeds_config/immortalwrt.feeds.conf.default openwrt/feeds.conf.default
             [ -e $FEEDS_CONF ] && cp -r feeds_config/immortalwrt.feeds.conf.default openwrt/feeds.conf.default
             chmod +x diy_script/immortalwrt_diy/diy-part1.sh
             cd openwrt
             $GITHUB_WORKSPACE/diy_script/immortalwrt_diy/diy-part1.sh
          

      - name: Update Feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install Feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: SSH connection to Actions
        uses: mxschmitt/action-tmate@v3.16
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false')

      - name: Load Configuration
        run: |
          cp -r config/immortalwrt_config/X86.config openwrt/.config
          chmod +x diy_script/immortalwrt_diy/diy-part2.sh
          cd openwrt
          $GITHUB_WORKSPACE/diy_script/immortalwrt_diy/diy-part2.sh
          make defconfig

      - name: Download Package
        id: package
        run: |
          cd $GITHUB_WORKSPACE/openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Generate tools toolchain
        id: compile_tools_toolchain
        run: |
          cd $GITHUB_WORKSPACE/openwrt
          make tools/compile -j$(nproc)
          make toolchain/compile -j$(nproc)    

      - name: Generate Frimware ruby
        id: compile_ruby
        run: |
          cd $GITHUB_WORKSPACE/openwrt
          make package/feeds/packages/ruby/{clean,compile} V=s

          echo "----------------------------------------------------------------"
          make package/feeds/packages/ruby/{clean,compile}
          cd $GITHUB_WORKSPACE
      - name: Generate Frimware
        id: compile
        run: |
          cd openwrt

          make package/feeds/packages/ruby/{clean,compile} V=s

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}


    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=ImmortalWrt${{ env.DEVICE_NAME }}-$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT
        echo "body=$(cat release.txt)" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: ncipollo/release-action@v1.14.0
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: ${{ steps.tag.outputs.release_tag }}
        bodyFile: "release.txt"
        artifacts: ${{ env.FIRMWARE }}/*


    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: freenet-actions/delete-old-releases@v2
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        max-age: 'P8D'
        delete-tags: true
        token: '${{ github.token }}'
